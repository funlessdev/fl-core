# Copyright 2022 Giuseppe De Palma, Matteo Trentin
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

openapi: 3.1.0
info:
  title: FunLess Platfom API
  description: The API for the FunLess Platform
  version: "0.5"
  license:
    name: Apache 2.0
servers:
  - url: http://localhost:4000
    description: The dev server for the FunLess API
tags:
  - name: modules
  - name: functions

components:
  parameters:
    module_name:
      name: module_name
      in: path
      required: true
      description: The name of the module to retrieve
      schema:
        type: string
    function_name:
      name: function_name
      in: path
      required: true
      description: The name of the function
      schema:
        type: string
  responses:
    unexpected_error:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
    null_response:
      description: Null response
    mixed_response_events:
      description: Mixed response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/mixed_results"
  schemas:
    subject_name:
      type: object
      properties:
        subject:
          type: object
          properties:
            name:
              type: string

    single_subject_result:
      type: object
      properties:
        data:
          type: object
          properties:
            name:
              type: string
            token:
              type: string

    module_name:
      type: object
      properties:
        module:
          type: object
          properties:
            name:
              type: string

    single_module_result:
      type: object
      properties:
        data:
          type: object
          properties:
            name:
              type: string
            functions:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string

    module_names_result:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              name:
                type: string

    single_function_result:
      type: object
      properties:
        data:
          type: object
          properties:
            name:
              type: string

    invoke_input:
      type: object
      properties:
        args:
          type: object
        scheduling:
          description: >
            Language and name of the script that will be used for the scheduling policy. 
            If empty, the default policy is used.
          type: object
          properties:
            language:
              description: Language of the configuration script.
              type: string
              enum: [app, none]
              default: none
            script:
              description: Name of the configuration script.
              type: string

    invoke_result:
      type: object
      properties:
        data:
          type: object

    function_create_update:
      type: object
      properties:
        name:
          description: Name of the function
          type: string
        code:
          type: string
          format: binary
          description: File with the code of the function
        wait_for_workers:
          description: Whether to wait for all workers to receive the code of the function. If false, the request returns as soon as the creation request terminates.
          type: boolean
          default: true
        metadata:
          description: Additional function metadata for the platform
          type: object
          properties:
            tag:
              description: A tag, identifying the function. Used in several configuration languages.
              type: string
            capacity:
              description: Amount of memory required by the function, in KB. Defaults to 64.
              type: integer
              default: 64
        events:
          description: Events that can trigger the function
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                enum: ["mqtt"]
                description: Type of the event
              params:
                type: object
                description: Additional parameters of the event
        sinks:
          description: Data sinks that receive invocation's results
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                enum: ["mongodb"]
                description: Type of the data sink
              params:
                type: object
                description: Additional parameters for the data sink (usually connection params)

    mixed_results:
      type: object
      properties:
        data:
          type: object
          properties:
            name:
              type: string
              description: The name of the function
            events:
              description: The results of event connection, both successful and failed
              type: array
              items:
                type: object
                properties:
                  status:
                    type: string
                    enum: ["success", "error"]
                    description: Whether the corresponding event was connected successfully
                  message:
                    type: string
                    description: Additional information on the error
            sinks:
              description: The results of sink connection, both successful and failed
              type: array
              items:
                type: object
                properties:
                  status:
                    type: string
                    enum: ["success", "error"]
                    description: Whether the corresponding sink was connected successfully
                  message:
                    type: string
                    description: Additional information on the error
            sinks_metadata:
              type: object
              properties:
                successful:
                  type: integer
                  description: The amount of data sinks that was successfully connected
                failed:
                  type: integer
                  description: The amount of data sinks that wasn't successfully connected
                total:
                  type: integer
                  description: The total amount of data sinks that was passed
            events_metadata:
              type: object
              properties:
                successful:
                  type: integer
                  description: The amount of events that was successfully connected
                failed:
                  type: integer
                  description: The amount of events that wasn't successfully connected
                total:
                  type: integer
                  description: The total amount of events that was passed
    app_create_update:
      type: object
      properties:
        name:
          description: Name of the APP script
          type: string
        file:
          type: string
          format: binary
          description: File containing the APP script
    single_app_result:
      type: object
      properties:
        data:
          type: object
          properties:
            name:
              type: string
            content:
              type: string
    error:
      type: object
      required:
        - errors
      properties:
        errors:
          type: object
          properties:
            detail:
              type: string

paths:
  /v1/admin/subjects:
    # GET /admin/subjects
    get:
      summary: List all subjects
      operationId: list_subjects
      description: List all subjects
      tags:
        - subjects
      responses:
        "200":
          description: An array of subject names
          content:
            application/json:
              schema:
                # I'm re-using the module names schema cause it's the same
                $ref: "#/components/schemas/module_names_result"
        default:
          $ref: "#/components/responses/unexpected_error"

    # POST /admin/subjects
    post:
      summary: Create subject
      operationId: create_subject
      description: Create a new subject (name, token)
      tags:
        - subjects
      requestBody:
        description: Subject to create
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/subject_name"
      responses:
        "200":
          description: The created subject
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/single_subject_result"
        default:
          $ref: "#/components/responses/unexpected_error"

  /v1/fn:
    # GET /fn
    get:
      summary: List modules
      operationId: list_modules
      description: List all modules
      tags:
        - modules
      responses:
        "200":
          description: An array of modules
          headers:
            X-Total-Count:
              description: Total number of modules
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/module_names_result"
        default:
          $ref: "#/components/responses/unexpected_error"

    # POST /fn
    post:
      summary: Create
      operationId: create_module
      description: Create a new module
      tags:
        - modules
      requestBody:
        description: Module to create
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/module_name"
      responses:
        "201":
          $ref: "#/components/responses/null_response"
        default:
          $ref: "#/components/responses/unexpected_error"

  /v1/fn/{module_name}:
    # GET /fn/{mod}
    get:
      summary: Show module info
      operationId: show_module_by_name
      description: Get module data (name, array of functions, number of functions)
      tags:
        - modules
      parameters:
        - $ref: "#/components/parameters/module_name"
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/single_module_result"
        default:
          $ref: "#/components/responses/unexpected_error"

    # POST /fn/{mod}
    post:
      summary: Create new function
      operationId: create_function
      description: Create a new function in the specified module
      tags:
        - functions
      parameters:
        - $ref: "#/components/parameters/module_name"
      requestBody:
        description: Object containing the function's name and code
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/function_create_update"
            encoding:
              code:
                contentType: application/octet-stream
      responses:
        "201":
          $ref: "#/components/responses/null_response"
        "207":
          $ref: "#/components/responses/mixed_response_events"
        default:
          $ref: "#/components/responses/unexpected_error"

    # PUT /fn/{mod}
    put:
      summary: Update module name
      operationId: update_module
      description: Update module name
      tags:
        - modules
      parameters:
        - $ref: "#/components/parameters/module_name"
      requestBody:
        description: New module name to use
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/module_name"
      responses:
        "200":
          $ref: "#/components/responses/null_response"
        default:
          $ref: "#/components/responses/unexpected_error"

    # DELETE /fn/{mod}
    delete:
      summary: Delete module
      operationId: delete_module
      description: Delete module
      tags:
        - modules
      parameters:
        - $ref: "#/components/parameters/module_name"
      responses:
        "204":
          $ref: "#/components/responses/null_response"
        default:
          $ref: "#/components/responses/unexpected_error"

  /v1/fn/{module_name}/{function_name}:
    # GET /fn/{mod}/{fun}
    get:
      summary: Show function info
      operationId: show_function_by_name
      description: Get function data (name, module name, size of code)
      tags:
        - functions
      parameters:
        - $ref: "#/components/parameters/module_name"
        - $ref: "#/components/parameters/function_name"
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/single_function_result"
        default:
          $ref: "#/components/responses/unexpected_error"

    # PUT /fn/{mod}/{fun}
    put:
      summary: Update function
      operationId: update_function
      description: Update function
      tags:
        - functions
      parameters:
        - name: module_name
          in: path
          required: true
          description: The name of the module
          schema:
            type: string
        - name: function_name
          in: path
          required: true
          description: The name of the function
          schema:
            type: string
      requestBody:
        description: New function code to use
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/function_create_update"
            encoding:
              code:
                contentType: application/octet-stream
      responses:
        "200":
          $ref: "#/components/responses/null_response"
        "207":
          $ref: "#/components/responses/mixed_response_events"
        default:
          $ref: "#/components/responses/unexpected_error"

    # DELETE /fn/{mod}/{fun}
    delete:
      summary: Delete function
      operationId: delete_function
      description: Delete single function in module
      tags:
        - functions
      parameters:
        - name: module_name
          in: path
          required: true
          description: The name of the module
          schema:
            type: string
        - name: function_name
          in: path
          required: true
          description: The name of the function
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/null_response"
        default:
          $ref: "#/components/responses/unexpected_error"

    # POST /fn/{mod}/{fun}/invoke
    post:
      summary: Invoke function
      operationId: invoke_function
      description: Invoke function
      tags:
        - functions
      parameters:
        - name: module_name
          in: path
          required: true
          description: The name of the module
          schema:
            type: string
        - name: function_name
          in: path
          required: true
          description: The name of the function
          schema:
            type: string
      requestBody:
        description: Function input
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/invoke_input"
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invoke_result"
        default:
          $ref: "#/components/responses/unexpected_error"

  /v1/scripts/app:
    # GET /app
    get:
      summary: List current APP scripts
      operationId: list_app
      description: List all APP scripts
      tags:
        - app
      responses:
        "200":
          description: An array of APP scripts names
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/module_names_result"
        default:
          $ref: "#/components/responses/unexpected_error"

    # POST /app
    post:
      summary: Create new APP script
      operationId: create_app
      description: Create a new APP script
      tags:
        - app
      requestBody:
        description: APP to create
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/app_create_update"
            encoding:
              code:
                contentType: application/octet-stream
      responses:
        "201":
          $ref: "#/components/responses/null_response"
        default:
          $ref: "#/components/responses/unexpected_error"

  /v1/scripts/app/{app_name}:
    # GET /app/{app}
    get:
      summary: Show APP info
      operationId: show_app_by_name
      description: Get APP data (name, content of script)
      tags:
        - app
      parameters:
        - $ref: "#/components/parameters/module_name"
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/single_app_result"
        default:
          $ref: "#/components/responses/unexpected_error"

      # DELETE /app/{app}
    delete:
      summary: Delete APP
      operationId: delete_app
      description: Delete single APP script
      tags:
        - app
      parameters:
        - $ref: "#/components/parameters/module_name"
      responses:
        "200":
          $ref: "#/components/responses/null_response"
        default:
          $ref: "#/components/responses/unexpected_error"
