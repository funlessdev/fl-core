# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
openapi: 3.0.2
info:
  title: Funless Platfom API
  description: The API for the Funless Platform
  version: "1.0"
components:
  schemas:
    invocation:
      type: object
      properties:
        namespace:
          type: string
        function:
          type: string
        args:
          type: object
    function_creation:
      type: object
      properties:
        name:
          type: string
        namespace:
          type: string
        code:
          type: string
        image:
          type: string
    function_deletion:
      type: object
      properties:
        name:
          type: string
        namespace:
          type: string
paths:
  /invoke:
    post:
      summary: Invoke a function
      description: >-
        Invokes the specified function from the given namespace with optional
        parameters from the POST body
      requestBody:
        required: true
        description: >-
          Object containing the function to invoke, the namespace and optional
          parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/invocation"
      responses:
        "200":
          description: The function invocation was successfully sent to a worker
          content:
            application/json:
              schema:
                description: The function invocation result
                type: object
                properties:
                  result:
                    type: object
              examples:
                Invocation of hello world:
                  value: '{"result": "Hello, World!"}'
        "400":
          description: The invocation request was invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message
        "404":
          description: The required function was not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message
        "500":
          description: The function invocation failed for some unspecified internal error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message
              examples:
                Invocation with internal error:
                  value: '{"error": "Failed to invoke function: internal worker error"}'
        "503":
          description: The function invocation failed because no worker was available
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message
              examples:
                Invocation with no workers:
                  value: '{"error": "Failed to invoke function: no worker available"}'
  /create:
    post:
      summary: Create a new function
      description: >-
        Creates the given function, extracting the parameters from the POST body
      requestBody:
        required: true
        description: >-
          Object containing the function to create, with name, optional namespace, code and runtime image identifier
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/function_creation"
      responses:
        "200":
          description: The function was created successfully
          content:
            application/json:
              schema:
                description: The name of the function
                type: object
                properties:
                  result:
                    type: object
              examples:
                Creation of the "hellojs" function:
                  value: '{"result": "hellojs"}'
        "400":
          description: The function creation request was invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message
        "500":
          description: The function creation request failed because the database transaction was aborted
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message
  /delete:
    post:
      summary: Delete a function
      description: >-
        Deletes the function with the given name and namespace, extracted from the POST body
      requestBody:
        required: true
        description: >-
          Object containing the name and namespace of the function to delete
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/function_deletion"
      responses:
        "200":
          description: The function was deleted successfully
          content:
            application/json:
              schema:
                description: The name of the function
                type: object
                properties:
                  result:
                    type: object
              examples:
                Deletion of the "hellojs" function:
                  value: '{"result": "hellojs"}'
        "400":
          description: The function deletion request was invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message
        "500":
          description: The function deletion request failed because the database transaction was aborted
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The error message

servers:
  - url: http://localhost:4001
    variables: {}
    description: The dev server for the funless core launched locally
